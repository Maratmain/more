#!/usr/bin/env python3
"""
Simple example of CV mapping functionality

This script demonstrates how to use the CV mapping rules
without requiring the full service to be running.
"""

import sys
from pathlib import Path

# Add the current directory to Python path
sys.path.append(str(Path(__file__).parent))

from mapping_rules import analyze_cv_mapping, BA_CATEGORIES, IT_CATEGORIES

def main():
    """Main example function"""
    print("üìù CV Mapping Example")
    print("=" * 40)
    
    # Example BA CV content
    ba_cv = """
    –ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫ —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –≤ —Ñ–∏–Ω—Ç–µ—Ö–µ
    
    –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:
    - 3 –≥–æ–¥–∞ —Ä–∞–±–æ—Ç—ã —Å –∞–Ω—Ç–∏—Ñ—Ä–æ–¥-—Å–∏—Å—Ç–µ–º–∞–º–∏
    - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω—Ç–∏—Ñ—Ä–æ–¥-–ø—Ä–∞–≤–∏–ª –∏ —Å–Ω–∏–∂–µ–Ω–∏–µ –ª–æ–∂–Ω–æ–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π
    - –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ –ø–ª–∞—Ç–µ–∂–Ω—ã–º —Å–∏—Å—Ç–µ–º–∞–º
    - –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Å—Ç-–∫–µ–π—Å–æ–≤ –¥–ª—è UAT
    - –†–∞–±–æ—Ç–∞ —Å –∑–∞–∫–∞–∑—á–∏–∫–∞–º–∏ –∏ —Å—Ç–µ–π–∫—Ö–æ–ª–¥–µ—Ä–∞–º–∏
    - –ó–Ω–∞–Ω–∏–µ SQL –∏ —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
    - –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ –∫–∞—Ä—Ç–∞–º–∏ –∏ –î–ë–û –Æ–õ
    - –í–µ–¥–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –≤ Confluence –∏ Jira
    - –ó–Ω–∞–Ω–∏–µ –ü–û–î-–§–¢ –∏ —Ä–µ–≥—É–ª—è—Ç–æ—Ä–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
    
    –ù–∞–≤—ã–∫–∏:
    - –ê–Ω—Ç–∏—Ñ—Ä–æ–¥-—Å–∏—Å—Ç–µ–º—ã, fraud detection
    - Requirements engineering
    - SQL, PostgreSQL, MySQL
    - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, UAT, test cases
    - –ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è —Å –∑–∞–∫–∞–∑—á–∏–∫–∞–º–∏
    - –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    """
    
    print("üîç Analyzing BA CV...")
    ba_result = analyze_cv_mapping(ba_cv, "ba")
    
    print(f"Priority Level: {ba_result['priority_level']}")
    print(f"Coverage: {ba_result['mapping_result']['covered_categories']}/{ba_result['mapping_result']['total_categories']}")
    
    print("\nDetected Blocks:")
    for category, data in ba_result['mapping_result']['detected_blocks'].items():
        if data['status'] == 'covered':
            print(f"  ‚úÖ {category}: {data['keyword_count']} keywords")
        else:
            print(f"  ‚ùå {category}: Not covered")
    
    print(f"\nMissing Blocks: {', '.join(ba_result['mapping_result']['missing_blocks'])}")
    
    # Example IT CV content
    it_cv = """
    –°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –≤ –¶–û–î
    
    –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:
    - 5 –ª–µ—Ç —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ä–≤–µ—Ä–Ω—ã–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º x86
    - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ BIOS, BMC –∏ RAID-–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤
    - –ú–æ–Ω—Ç–∞–∂ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è Cisco
    - –†–∞–±–æ—Ç–∞ —Å LAN/SAN —Å–µ—Ç—è–º–∏
    - –ú–æ–Ω—Ç–∞–∂ –°–ö–° –∏ —Ä–∞–±–æ—Ç–∞ —Å –æ–ø—Ç–∏—á–µ—Å–∫–∏–º–∏ –∫–∞–±–µ–ª—è–º–∏
    - –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤ –∏ –∞–≤–∞—Ä–∏–π –≤ –¶–û–î
    - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Windows Server –∏ Active Directory
    - –†–∞–±–æ—Ç–∞ —Å –≥—Ä—É–ø–ø–æ–≤—ã–º–∏ –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏ (GPO)
    - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Excel –∏ Visio –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    - –†–∞–±–æ—Ç–∞ —Å CMDB –∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    
    –ù–∞–≤—ã–∫–∏:
    - –°–µ—Ä–≤–µ—Ä–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ x86, BIOS, BMC, RAID
    - –°–µ—Ç–µ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ LAN/SAN, Cisco, MikroTik
    - Windows Server, Linux, Active Directory, DNS, DHCP
    - –ì—Ä—É–ø–ø–æ–≤—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏, GPO, WDS
    - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤
    - CMDB, DCIM, –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å
    - Excel, Visio, PowerShell
    """
    
    print("\n\nüíª Analyzing IT CV...")
    it_result = analyze_cv_mapping(it_cv, "it")
    
    print(f"Priority Level: {it_result['priority_level']}")
    print(f"Coverage: {it_result['mapping_result']['covered_categories']}/{it_result['mapping_result']['total_categories']}")
    
    print("\nDetected Blocks:")
    for category, data in it_result['mapping_result']['detected_blocks'].items():
        if data['status'] == 'covered':
            print(f"  ‚úÖ {category}: {data['keyword_count']} keywords")
        else:
            print(f"  ‚ùå {category}: Not covered")
    
    print(f"\nMissing Blocks: {', '.join(it_result['mapping_result']['missing_blocks'])}")
    
    print("\nüèÅ Example completed!")

if __name__ == "__main__":
    main()
